<?xml version="1.0" encoding="UTF-8"?><testsuites failures="36" name="dependency-check" tests="17"><testsuite failures="0" id="0" name="C:\Users\crist\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar" package="HdrHistogram-2.1.12.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="HdrHistogram-2.1.12.jar"/></testsuite><testsuite failures="0" id="1" name="C:\Users\crist\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar" package="LatencyUtils-2.0.3.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="LatencyUtils-2.0.3.jar"/></testsuite><testsuite failures="0" id="2" name="C:\Users\crist\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar" package="antlr4-runtime-4.7.2.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="antlr4-runtime-4.7.2.jar"/></testsuite><testsuite failures="0" id="3" name="C:\Users\crist\.m2\repository\org\ow2\asm\asm\9.2\asm-9.2.jar" package="asm-9.2.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="asm-9.2.jar"/></testsuite><testsuite failures="0" id="4" name="C:\Users\crist\.m2\repository\org\apache\commons\commons-lang3\3.10\commons-lang3-3.10.jar" package="commons-lang3-3.10.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="commons-lang3-3.10.jar"/></testsuite><testsuite failures="1" id="5" name="C:\Users\crist\.m2\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar" package="gson-2.8.6.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2022-25647" name="pkg:maven/com.google.code.gson/gson@2.8.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.</system-out><system-err>location: C:\Users\crist\.m2\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar</system-err></testcase></testsuite><testsuite failures="0" id="6" name="C:\Users\crist\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.2\jackson-core-2.11.2.jar" package="jackson-core-2.11.2.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="jackson-core-2.11.2.jar"/></testsuite><testsuite failures="1" id="7" name="C:\Users\crist\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.2\jackson-databind-2.11.2.jar" package="jackson-databind-2.11.2.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2020-36518" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.</system-out><system-err>location: C:\Users\crist\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.2\jackson-databind-2.11.2.jar</system-err></testcase></testsuite><testsuite failures="0" id="8" name="C:\Users\crist\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar" package="jakarta.annotation-api-1.3.5.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="jakarta.annotation-api-1.3.5.jar"/></testsuite><testsuite failures="1" id="9" name="C:\Users\crist\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar" package="jakarta.el-3.0.3.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2021-28170" name="pkg:maven/org.glassfish/jakarta.el@3.0.3"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In the Jakarta Expression Language implementation 3.0.3 and earlier, a bug in the ELParserTokenManager enables invalid EL expressions to be evaluated as if they were valid.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="10" name="C:\Users\crist\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar" package="javax.servlet-api-4.0.1.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="javax.servlet-api-4.0.1.jar"/></testsuite><testsuite failures="0" id="11" name="C:\Users\crist\.m2\repository\com\beust\jcommander\1.48\jcommander-1.48.jar" package="jcommander-1.48.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="jcommander-1.48.jar"/></testsuite><testsuite failures="0" id="12" name="C:\Users\crist\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar" package="jul-to-slf4j-1.7.30.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="jul-to-slf4j-1.7.30.jar"/></testsuite><testsuite failures="0" id="13" name="C:\Users\crist\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar" package="log4j-api-2.17.2.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="log4j-api-2.17.2.jar"/></testsuite><testsuite failures="1" id="14" name="C:\Users\crist\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar" package="logback-core-1.2.3.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2021-42550" name="pkg:maven/ch.qos.logback/logback-core@1.2.3"><failure message="cvssV3: MEDIUM, score: 6.6 (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.</system-out><system-err>location: C:\Users\crist\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="15" name="C:\Users\crist\.m2\repository\io\micrometer\micrometer-core\1.5.5\micrometer-core-1.5.5.jar" package="micrometer-core-1.5.5.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="micrometer-core-1.5.5.jar"/></testsuite><testsuite failures="0" id="16" name="C:\Users\crist\.m2\repository\net\sourceforge\pmd\pmd-core\6.46.0\pmd-core-6.46.0.jar" package="pmd-core-6.46.0.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="pmd-core-6.46.0.jar"/></testsuite><testsuite failures="0" id="17" name="C:\Users\crist\.m2\repository\net\sourceforge\saxon\saxon\9.1.0.8\saxon-9.1.0.8-dom.jar" package="saxon-9.1.0.8-dom.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="saxon-9.1.0.8-dom.jar"/></testsuite><testsuite failures="0" id="18" name="C:\Users\crist\.m2\repository\net\sourceforge\saxon\saxon\9.1.0.8\saxon-9.1.0.8.jar" package="saxon-9.1.0.8.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="saxon-9.1.0.8.jar"/></testsuite><testsuite failures="0" id="19" name="C:\Users\crist\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar" package="slf4j-api-1.7.30.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="slf4j-api-1.7.30.jar"/></testsuite><testsuite failures="0" id="20" name="C:\Users\crist\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar" package="snakeyaml-1.26.jar" skipped="0" tests="1" timestamp="2022-06-01T16:16:23.760222"><testcase classname="dependency-check" name="snakeyaml-1.26.jar"/></testsuite><testsuite failures="7" id="21" name="C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar" package="spring-boot-2.3.4.RELEASE.jar" skipped="0" tests="7" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2013-4152" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2013-7315" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2014-0054" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: HIGH, score: 7.8 (/AV:L/AC:L/Au:/C:H/I:H/A:H)"/><system-out>** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot\2.3.4.RELEASE\spring-boot-2.3.4.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="6" id="22" name="C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar" package="spring-boot-starter-2.3.4.RELEASE.jar" skipped="0" tests="6" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2013-4152" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2013-7315" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2014-0054" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.4.RELEASE\spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="9" id="23" name="C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar" package="spring-core-5.2.9.RELEASE.jar" skipped="0" tests="9" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22060" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22096" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22118" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22971" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\springframework\spring-core\5.2.9.RELEASE\spring-core-5.2.9.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="10" id="24" name="C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar" package="tomcat-embed-core-9.0.38.jar" skipped="0" tests="10" timestamp="2022-06-01T16:16:23.760222"><testcase classname="CVE-2020-17527" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2020-9484" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=&quot;null&quot; (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-24122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-25122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A&apos;s request.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-25329" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-30640" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N)"/><system-out>A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-33037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-41079" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-23181" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>The fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-29885" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The documentation of Apache Tomcat 10.1.0-M1 to 10.1.0-M14, 10.0.0-M1 to 10.0.20, 9.0.13 to 9.0.62 and 8.5.38 to 8.5.78 for the EncryptInterceptor incorrectly stated it enabled Tomcat clustering to run over an untrusted network. This was not correct. While the EncryptInterceptor does provide confidentiality and integrity protection, it does not protect against all risks associated with running over any untrusted network, particularly DoS risks.</system-out><system-err>location: C:\Users\crist\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.38\tomcat-embed-core-9.0.38.jar</system-err></testcase></testsuite></testsuites>